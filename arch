#!/usr/bin/env bash

# Define color variables
RESET='\033[0m'
BOLD='\033[1m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
RED='\033[0;31m'

is_package_installed() {
    if pacman -Q "$1" &>/dev/null; then
        echo -e "${YELLOW}Package '$1' is already installed.${RESET}"
        return 0
    else
        return 1
    fi
}

#############################
#                           #
#       Dependencies        #
#                           #
#############################


# Create necessary directories if they do not already exist
echo -e "${GREEN}Setting up directories...${RESET}"
mkdir -p $HOME/Dev        # Development directory
mkdir -p $HOME/pkgs       # Packages directory
mkdir -p $HOME/.config    # Configuration directory
mkdir -p $HOME/Pictures   # Pictures directory

# Check if yay is installed, and if not, install it
if ! command -v yay >/dev/null 2>&1; then
    echo -e "${RED}yay is not installed, installing yay from AUR...${RESET}"
    git clone https://aur.archlinux.org/yay.git $HOME/pkgs/yay
    cd $HOME/pkgs/yay || exit
    makepkg -si --noconfirm
    git clean -fdx
    cd "$DOTFILES" || exit
else
    echo -e "${YELLOW}yay is already installed.${RESET}"
fi

# Install AUR packages using yay (AUR helper)
echo -e "${BLUE}Installing additional packages from AUR using yay...${RESET}"
aur_packages=(
    base
    linux
    linux-firmware
    bat
    bluez
    bluez-tools
    brave-bin
    brightnessctl
    bspwm
    btop
    catppuccin-gtk-theme-mocha
    curl
    diff-so-fancy
    direnv
    docker
    docker-compose
    dunst
    fastfetch
    fd
    ffmpeg
    file
    firefox
    fzf
    git
    google-chrome
    imagemagick
    inter-font
    jq
    kitty
    kmonad
    less
    lsd
    lxappearance-gtk3
    ly
    maim
    maplemono-nf-cn-unhinted
    nb
    neovim
    nitrogen
    nvidia-container-toolkit
    nvidia-dkms
    openssh
    otf-monaspace
    otf-monaspace-nerd
    papirus-folders-catppuccin-git
    papirus-icon-theme
    parted
    p7zip
    picom
    playerctl
    polybar
    poppler
    python-pip
    qmk
    qt5ct
    qt6ct
    qutebrowser
    resvg
    ripgrep
    rofi
    rofi-rbw
    screenkey
    slop
    starship
    stow
    sxhkd
    tmux
    torrent-git
    ttf-nerd-fonts-symbols
    vlc
    visual-studio-code-bin 
    wget
    wmctrl
    xclip
    xdotool
    xorg-xrandr
    yad
    yazi
    zed
    zoxide
    zsh 
)

for package in "${aur_packages[@]}"; do
    if ! is_package_installed "$package"; then
        echo -e "${CYAN}Installing AUR package '$package'...${RESET}"
        yay -S --noconfirm "$package"
    else
        echo -e "${YELLOW}AUR package '$package' is already installed.${RESET}"
    fi
done

# Download wallpapers if the directory doesn't already exist
if [ ! -d $HOME/Pictures/wallpapers ]; then
    echo -e "${CYAN}Downloading wallpapers from GitHub repository...${RESET}"
    git clone https://github.com/orangci/walls-catppuccin-mocha.git $HOME/Pictures/wallpapers
else
    echo -e "${YELLOW}Wallpapers already downloaded.${RESET}"
fi

# Configure tmux if it's not already configured
if [ ! -d $HOME/.tmux/plugins/tpm ]; then
    echo -e "${CYAN}Setting up tmux plugin manager (tpm)...${RESET}"
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
else
    echo -e "${YELLOW}tmux plugin manager is already installed.${RESET}"
fi

# Install mise-en-place if it's not already installed
if  command -v mise >/dev/null 2>&1; then
    echo -e "${CYAN}mise-en-place is not installed, installing it...${RESET}"
    curl https://mise.run | sh
    eval "$($HOME/.local/bin/mise active mise)"
    echo -e "${CYAN}[mise-enplace]: Installing PHP dependencies...${RESET}"
    
    # Install necessary dependencies for mise-en-place
    php_dependencies=(
      autoconf bison base-devel curl gettext git gd libcurl-compat
      libedit icu libjpeg-turbo mariadb-libs oniguruma libpng postgresql-libs
      readline sqlite openssl pkgconf re2c zlib libxml2 libzip
    )
    for package in "${php_dependencies[@]}"; do
        if ! is_package_installed "$package"; then
            echo -e "${CYAN}Installing PHP dependency '$package'...${RESET}"
            yay -S --noconfirm "$package"
        else
            echo -e "${YELLOW}PHP dependency '$package' is already installed.${RESET}"
        fi
    done
else
    echo -e "${YELLOW}mise-en-place is already installed.${RESET}"
fi

if  command -v papirus-folders >/dev/null 2>&1; then
    echo -e "${CYAN}configuring gtk...${RESET}"
    papirus-folders -C cat-mocha-maroon
fi


if [ ! -d $HOME/.oh-my-zsh ]; then
    echo -e "${CYAN}oh my zsh is not installed, installing it...${RESET}"
    git clone https://github.com/ohmyzsh/ohmyzsh $HOME/.oh-my-zsh
    export ZSH_PLUGIN_DIR="$HOME/.oh-my-zsh/plugins"
    mkdir -p $ZSH_PLUGIN_DIR
    git clone https://github.com/zsh-users/zsh-completions.git $ZSH_PLUGIN_DIR/zsh-completions 
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_PLUGIN_DIR/zsh-syntax-highlighting
    git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_PLUGIN_DIR/zsh-autosuggestions
fi


# Install yazi plugins 
if command -v yazi >/dev/null 2>&1; then
    echo -e "${CYAN}[yazi]: Installing yazi plugins...${RESET}"
    ya pack -a yazi-rs/plugins:smart-paste
    ya pack -a yazi-rs/plugins:smart-filter
    ya pack -a yazi-rs/plugins:smart-enter

    mkdir -p ~/.config/yazi/plugins
    git clone https://github.com/mgumz/yazi-plugin-bat.git ~/.config/yazi/plugins/bat.yazi 
fi

if ! command -v dmenu >/dev/null 2>&1; then
    git clone https://github.com/joseederangojr/dmenu.git  $HOME/pkgs/dmenu
    cd $HOME/pkgs/dmenu && sudo make clean install
fi


if command -v docker >/dev/null 2>&1; then
    echo -e "${CYAN}Installing docker${RESET}"
    sudo groupadd docker
    sudo usermod -aG docker $USER
    newgrp docker
    docker run hello-world
fi

if ! systemctl is-active --quiet "bluetooth.service"; then
    echo -e "${CYAN}Enabling bluetooth${RESET}"
    sudo systemctl enable bluetooth 
fi

if ! systemctl is-active --quiet "ly.service"; then
    echo -e "${CYAN}Enabling ly${RESET}"
    sudo systemctl enable ly
fi

echo -e "${CYAN}Linking stow${RESET}..."
stow --target=$HOME --adopt --verbose zsh zed yazi xinit vscode tmux sxhkd starship ssh screenkey rofi polybar picom nvim mise kitty git dunst bspwm bin bat gtk git btop nb 

echo -e "${CYAN}installing mise tools...${RESET}"
mise install

echo -e "${GREEN}${BOLD}Setup complete. All packages and configurations are installed.${RESET}"
